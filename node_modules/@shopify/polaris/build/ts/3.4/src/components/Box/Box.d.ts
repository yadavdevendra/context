import React, { ReactNode } from 'react';
import { ColorsTokenName, DepthShadowAlias, ShapeTokenName, SpacingSpaceScale } from '@shopify/polaris-tokens';
declare type BackgroundColorTokenScale = Extract<ColorsTokenName, 'background' | `background-${string}` | 'surface' | `surface-${string}` | 'backdrop' | 'overlay' | `action-${string}`>;
declare type ColorTokenScale = Extract<ColorsTokenName, 'text' | `text-${string}`>;
declare type BorderShapeTokenScale = ShapeTokenName extends `border-${infer Scale}` ? Scale : never;
declare type BorderTokenScale = Exclude<BorderShapeTokenScale, `radius-${string}` | `width-${string}`>;
declare type BorderRadiusTokenScale = Extract<BorderShapeTokenScale, `radius-${string}`> extends `radius-${infer Scale}` ? Scale : never;
declare type Element = 'div' | 'span';
export interface BoxProps {
    /** HTML Element type */
    as?: Element;
    /** Background color */
    background?: BackgroundColorTokenScale;
    /** Border style */
    border?: BorderTokenScale;
    /** Bottom border style */
    borderBottom?: BorderTokenScale;
    /** Left border style */
    borderLeft?: BorderTokenScale;
    /** Right border style */
    borderRight?: BorderTokenScale;
    /** Top border style */
    borderTop?: BorderTokenScale;
    /** Border radius */
    borderRadius?: BorderRadiusTokenScale;
    /** Bottom left border radius */
    borderRadiusBottomLeft?: BorderRadiusTokenScale;
    /** Bottom right border radius */
    borderRadiusBottomRight?: BorderRadiusTokenScale;
    /** Top left border radius */
    borderRadiusTopLeft?: BorderRadiusTokenScale;
    /** Top right border radius */
    borderRadiusTopRight?: BorderRadiusTokenScale;
    /** Inner content */
    children: ReactNode;
    /** Color of children */
    color?: ColorTokenScale;
    /** HTML id attribute */
    id?: string;
    /** Spacing outside of container */
    maxWidth?: string;
    /** Spacing around children */
    padding?: SpacingSpaceScale;
    /** Bottom spacing around children */
    paddingBottom?: SpacingSpaceScale;
    /** Left spacing around children */
    paddingLeft?: SpacingSpaceScale;
    /** Right spacing around children */
    paddingRight?: SpacingSpaceScale;
    /** Top spacing around children */
    paddingTop?: SpacingSpaceScale;
    /** Shadow */
    shadow?: DepthShadowAlias;
}
export declare const Box: React.ForwardRefExoticComponent<BoxProps & React.RefAttributes<HTMLElement>>;
export {};
//# sourceMappingURL=Box.d.ts.map
