import { forwardRef, createElement } from 'react';
import { classNames, sanitizeCustomProperties } from '../../utilities/css.esnext';
import styles from './Box.scss.esnext';

const Box = /*#__PURE__*/forwardRef(({
  as = 'div',
  background,
  border,
  borderBottom,
  borderLeft,
  borderRight,
  borderTop,
  borderRadius,
  borderRadiusBottomLeft,
  borderRadiusBottomRight,
  borderRadiusTopLeft,
  borderRadiusTopRight,
  children,
  color,
  id,
  maxWidth,
  padding,
  paddingBottom,
  paddingLeft,
  paddingRight,
  paddingTop,
  shadow
}, ref) => {
  const borders = {
    bottom: borderBottom ? borderBottom : border,
    left: borderLeft ? borderLeft : border,
    right: borderRight ? borderRight : border,
    top: borderTop ? borderTop : border
  };
  const borderRadiuses = {
    bottomLeft: borderRadiusBottomLeft ? borderRadiusBottomLeft : borderRadius,
    bottomRight: borderRadiusBottomRight ? borderRadiusBottomRight : borderRadius,
    topLeft: borderRadiusTopLeft ? borderRadiusTopLeft : borderRadius,
    topRight: borderRadiusTopRight ? borderRadiusTopRight : borderRadius
  };
  const paddings = {
    bottom: paddingBottom ? paddingBottom : padding,
    left: paddingLeft ? paddingLeft : padding,
    right: paddingRight ? paddingRight : padding,
    top: paddingTop ? paddingTop : padding
  };
  const style = { ...(background ? {
      '--pc-box-background': `var(--p-${background})`
    } : undefined),
    ...(borders.bottom ? {
      '--pc-box-border-bottom': `var(--p-border-${borders.bottom})`
    } : undefined),
    ...(borders.left ? {
      '--pc-box-border-left': `var(--p-border-${borders.left})`
    } : undefined),
    ...(borders.right ? {
      '--pc-box-border-right': `var(--p-border-${borders.right})`
    } : undefined),
    ...(borders.top ? {
      '--pc-box-border-top': `var(--p-border-${borders.top})`
    } : undefined),
    ...(borderRadiuses.bottomLeft ? {
      '--pc-box-border-radius-bottom-left': `var(--p-border-radius-${borderRadiuses.bottomLeft})`
    } : undefined),
    ...(borderRadiuses.bottomRight ? {
      '--pc-box-border-radius-bottom-right': `var(--p-border-radius-${borderRadiuses.bottomRight})`
    } : undefined),
    ...(borderRadiuses.topLeft ? {
      '--pc-box-border-radius-top-left': `var(--p-border-radius-${borderRadiuses.topLeft})`
    } : undefined),
    ...(borderRadiuses.topRight ? {
      '--pc-box-border-radius-top-right': `var(--p-border-radius-${borderRadiuses.topRight})`
    } : undefined),
    ...(color ? {
      '--pc-box-color': `var(--p-${color})`
    } : undefined),
    ...(maxWidth ? {
      '--pc-box-max-width': `${maxWidth}px`
    } : undefined),
    ...(paddings.bottom ? {
      '--pc-box-padding-bottom': `var(--p-space-${paddings.bottom})`
    } : undefined),
    ...(paddings.left ? {
      '--pc-box-padding-left': `var(--p-space-${paddings.left})`
    } : undefined),
    ...(paddings.right ? {
      '--pc-box-padding-right': `var(--p-space-${paddings.right})`
    } : undefined),
    ...(paddings.top ? {
      '--pc-box-padding-top': `var(--p-space-${paddings.top})`
    } : undefined),
    ...(shadow ? {
      '--pc-box-shadow': `var(--p-shadow-${shadow})`
    } : undefined)
  };
  const className = classNames(styles.Box);
  return /*#__PURE__*/createElement(as, {
    className,
    id,
    ref,
    style: sanitizeCustomProperties(style)
  }, children);
});
Box.displayName = 'Box';

export { Box };
